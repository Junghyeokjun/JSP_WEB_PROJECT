2차 프로젝트 열심히하조의 발표를 진행하겠습니다.

먼저 해당 프로젝트는 3가지 홈페이지의 명단을 관리하는 프로그램입니다.
홈페이지는 골프 사이트 회원관리 투표사이트 참여자 관리 쇼핑몰사이트 회원관리 이 세가지가 있습니다.

발표는 역할분배, 개발환경 및 설계, 코드 설계 및 화면, 후기 순으로 진행하겠습니다.

먼저 역할분배입니다.

이번 역할분배는 먼저 공통적인 부분에서는 조원셋이서 각자 하나의 주제를 가진 홈페이지를 분배하고 공통적으로 각자의 주제에 대한 프로그래밍, 데이터베이스 구현 화면구성을 맡게 되었습니다.
개별적인 부분으로는 발표부분과 발표자료 제작부분을 나누어맡게 되었으며 저는 발표부분과 프로젝트 병합을 맡게되었고 지연님은 발표자료의 참고자료 탐색을 신선님은 레이아웃 탐색을 맡아 주셨으며 두분은 공통적으로 발표자료의 화면구성을 담당해주셨습니다.

프로젝트의 일자별 진행은 첫날과 둘쨋날에는 각자의 데이터베이스와 담당 홈페이지의 구현을 하였으며 세번째날에는 프로젝트의 병합 작업을
네번째와 다섯번째날은 발표자료의 제작을 하였습니다.

다음으로는 개발환경및 설계관련 부분입니다.

저희는 프론트부분으로는 부트스트랩을 기반으로한 html로 화면을 구성하였으며 동적인 부분은 자바 스크립트와 제이쿼리로, 추가적으로 라이브러리에 존재하지 않는 스타일 부분은 css로 보강하여 작업을 진행하였습니다. 
백엔드 부분은 jsp서블릿을 기반으로한 서버 프로그래밍을 하였으며 aws서버는 톰캣을 사용하였고 db는 오라클을 사용하였습니다.
그리고 이를 제작하면서 소스코드의 관리는 깃허브를 기반으로 하였습니다.

다음은 db테이블의 구성도입니다. 대부분의 테이블이 하나의 컬럼을 프라이머리 키로 가지고 있으며 일부 테이블에서는 두 컬럼의 값의 조합을 기반으로 중복을 금지하는 다중 프라이머리키를 사용하였습니다.

다음은 프로그램의 설계 부분인데 세가지의 홈페이지 전부 mvc 2 모델을 사용하였으며  해당 설계는 세 홈페이지가 공통적으로 사용하여 설계도 또한 비슷해진 관계로 넘어가도록 하겠습니다.

다음은 코드설계및 화면입니다.
코드는 공통되는 부분이 많으므로 대표적인 몇부분만 설명하고 넘어가도록 하겠습니다.

첫번째는 컨트롤러 부분입니다. 클라이언트와 모델 뷰를 연결하여 주는 부분으로 request객체의 형태로 받은 요청을 command객체를 활용하여 알맞은 부분에 전달하는 역할을 하고있습니다. 

골프홈페이지의 컨트롤러입니다.
클라이언트가 해당 url패턴에 부합하는 url로 요청을 전달했을때 해당 서블릿이 그 요청을 받게됩니다.

해당 서블릿은 요청을 받은 request객체의 uri와 컨텍스트 경로를 통해 실제로 호출된 요청의 종류를 확인하며 해당 요청의종류에 따라 
커맨드 인터페이스를 상속받은 알맞은 커맨드 객체를 할당하고, 인터페이스의 처리함수를 구현한 커맨드로 해당 요청을 넘기며 해당 요청의 처리결과를 받고 해당 처리결과를 다시 알맞은 부분으로 넘깁니다.

다음은 컨트롤러에서 받은 요청을 처리하는 커맨드 입니다.

모든 커맨드 클래스가 구현해야하는 g커맨드 인터페이스입니다. 해당 인터페이스는 엑시큐트 추상함수 하나만을 가지며 해당 인터페이스를 구현하는 클래스는 엑시큐트 함수의 구현을 강제받음으로써 동일한 메서드로 각자 다른 로직의 실행을 가능하게 합니다.
 
이 클래스는 해당 인터페이스를 구현한 어플리커맨드입니다. 리퀘스트객체에서 사용자가 입력한 값을 얻어 해당 데이터를 기반으로 요청을 처리할수 있는 dao의 함수를 호출한후 함수의 결과를 request객체에 담는 역할을 합니다.

다음은 모델입니다. 모델은 데이터베이스와 통신하여 데이터를 가공하거나 로직을 처리하는 역할을합니다.

모델의 dao부분입니다. 데이터베이스와 통신하여 crud를 진행하는 역할을 합니다

다음은 golfclassdao의 apply부분입니다.
데이터 소스로부터 커넥션을 얻고 해당커넥션으로 부터 스테이트먼트를 얻은후 해당 스테이트먼트로 sql문을 실행하여 요청에 알맞는 로직을 실행합니다. 해당 로직이 종료된후 데이터 소스로 부터 취득한 커넥션과 스테이트 먼트의 연결을 끊고 호출을 종료합니다.

모델의 dto부분입니다.  프로그램 내부에서 데이터를 주고받을때 사용되는 데이터 클래스입니다.

다음은 골프클래스 dto입니다 데이터베이스의 테이블을 기반으로 만든 데이터 클래스이며 게터 세터 함수를 이용해 데이터를 클래스 내부의 데이터를 얻어올수 있습니다.

다음은 뷰 입니다. 사용자에게 정보를 표시하고 사용자의 입력을 받는 역할을 합니다.

해당코드는 뷰의 스크립트 부분이며 제이쿼리와 자바스크립트로 작성하였습니다. 특정 셀렉트박스의 선택에 따라 동일한 행에 존재하는 다른 컬럼의 값을 인풋박스에 설정하는 기능과 유효성검사를 진행하는것과같은 동적인 동작을 처리한 부분입니다.

다음은 사용자에게 보여지는 화면을 담당하는 뷰의 html 부분입니다. 해당 코드의 작성으로 사용자의 데이터 입력을 수월하게 합니다.

이것은 저희 조가 프로그래밍한 홈페이지의 기능을 촬영한 영상입니다.

마지막으로 후기입니다.

깃허브의 병합문제와 템플릿의 통합이 아쉬웠었고 이는 사전의 확실한 방식의 통일로 극복해 낼수 있는 문제라고 다들 결론을 내렸습니다.

이상으로 발표를 마치겠습니다 감사합니다.